/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var CameraExposureParams_pb = require('./CameraExposureParams_pb.js');
var FlasherParams_pb = require('./FlasherParams_pb.js');
var FaceDetectionResult_pb = require('./FaceDetectionResult_pb.js');
var SystemStatusResult_pb = require('./SystemStatusResult_pb.js');
var FileListResult_pb = require('./FileListResult_pb.js');
var FilePart_pb = require('./FilePart_pb.js');
var RegisterFaceIdWithPicParams_pb = require('./RegisterFaceIdWithPicParams_pb.js');
goog.exportSymbol('proto.ResultDataNG', null, global);
goog.exportSymbol('proto.YtMsg', null, global);
goog.exportSymbol('proto.YtResult', null, global);
goog.exportSymbol('proto.YtRpc', null, global);
goog.exportSymbol('proto.YtRpc.Function', null, global);
goog.exportSymbol('proto.YtRpcResponse', null, global);
goog.exportSymbol('proto.YtRpcResponse.ReturnCode', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ResultDataNG = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ResultDataNG.repeatedFields_, null);
};
goog.inherits(proto.ResultDataNG, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ResultDataNG.displayName = 'proto.ResultDataNG';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ResultDataNG.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ResultDataNG.prototype.toObject = function(opt_includeInstance) {
  return proto.ResultDataNG.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ResultDataNG} msg The msg instance to transform.
 * @return {!Object}
 */
proto.ResultDataNG.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getField(msg, 1),
    valuesList: jspb.Message.getRepeatedFloatingPointField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ResultDataNG}
 */
proto.ResultDataNG.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ResultDataNG;
  return proto.ResultDataNG.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ResultDataNG} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ResultDataNG}
 */
proto.ResultDataNG.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
      msg.setValuesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.ResultDataNG} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.ResultDataNG.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ResultDataNG.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.ResultDataNG.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getValuesList();
  if (f.length > 0) {
    writer.writePackedFloat(
      2,
      f
    );
  }
};


/**
 * required string key = 1;
 * @return {string}
 */
proto.ResultDataNG.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ResultDataNG.prototype.setKey = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.ResultDataNG.prototype.clearKey = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ResultDataNG.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated float values = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.ResultDataNG.prototype.getValuesList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/** @param {!Array.<number>} value */
proto.ResultDataNG.prototype.setValuesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.ResultDataNG.prototype.addValues = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.ResultDataNG.prototype.clearValuesList = function() {
  this.setValuesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.YtResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.YtResult.oneofGroups_);
};
goog.inherits(proto.YtResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.YtResult.displayName = 'proto.YtResult';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.YtResult.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.YtResult.DataCase = {
  DATA_NOT_SET: 0,
  FACEDETECTIONRESULT: 3,
  SYSTEMSTATUSRESULT: 4,
  MSGOUTPUT: 5
};

/**
 * @return {proto.YtResult.DataCase}
 */
proto.YtResult.prototype.getDataCase = function() {
  return /** @type {proto.YtResult.DataCase} */(jspb.Message.computeOneofCase(this, proto.YtResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.YtResult.prototype.toObject = function(opt_includeInstance) {
  return proto.YtResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.YtResult} msg The msg instance to transform.
 * @return {!Object}
 */
proto.YtResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    frameid: jspb.Message.getField(msg, 1),
    frametimestampus: jspb.Message.getField(msg, 2),
    facedetectionresult: (f = msg.getFacedetectionresult()) && FaceDetectionResult_pb.FaceDetectionResult.toObject(includeInstance, f),
    systemstatusresult: (f = msg.getSystemstatusresult()) && SystemStatusResult_pb.SystemStatusResult.toObject(includeInstance, f),
    msgoutput: jspb.Message.getField(msg, 5),
    datav2: msg.getDatav2_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.YtResult}
 */
proto.YtResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.YtResult;
  return proto.YtResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.YtResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.YtResult}
 */
proto.YtResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFrameid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFrametimestampus(value);
      break;
    case 3:
      var value = new FaceDetectionResult_pb.FaceDetectionResult;
      reader.readMessage(value,FaceDetectionResult_pb.FaceDetectionResult.deserializeBinaryFromReader);
      msg.setFacedetectionresult(value);
      break;
    case 4:
      var value = new SystemStatusResult_pb.SystemStatusResult;
      reader.readMessage(value,SystemStatusResult_pb.SystemStatusResult.deserializeBinaryFromReader);
      msg.setSystemstatusresult(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgoutput(value);
      break;
    case 101:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDatav2(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.YtResult} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.YtResult.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.YtResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.YtResult.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = this.getFacedetectionresult();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      FaceDetectionResult_pb.FaceDetectionResult.serializeBinaryToWriter
    );
  }
  f = this.getSystemstatusresult();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      SystemStatusResult_pb.SystemStatusResult.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(this, 101));
  if (f != null) {
    writer.writeBytes(
      101,
      f
    );
  }
};


/**
 * optional uint64 frameId = 1;
 * @return {number}
 */
proto.YtResult.prototype.getFrameid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.YtResult.prototype.setFrameid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.YtResult.prototype.clearFrameid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtResult.prototype.hasFrameid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 frameTimestampUs = 2;
 * @return {number}
 */
proto.YtResult.prototype.getFrametimestampus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.YtResult.prototype.setFrametimestampus = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.YtResult.prototype.clearFrametimestampus = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtResult.prototype.hasFrametimestampus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FaceDetectionResult faceDetectionResult = 3;
 * @return {?proto.FaceDetectionResult}
 */
proto.YtResult.prototype.getFacedetectionresult = function() {
  return /** @type{?proto.FaceDetectionResult} */ (
    jspb.Message.getWrapperField(this, FaceDetectionResult_pb.FaceDetectionResult, 3));
};


/** @param {?proto.FaceDetectionResult|undefined} value */
proto.YtResult.prototype.setFacedetectionresult = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.YtResult.oneofGroups_[0], value);
};


proto.YtResult.prototype.clearFacedetectionresult = function() {
  this.setFacedetectionresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtResult.prototype.hasFacedetectionresult = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SystemStatusResult systemStatusResult = 4;
 * @return {?proto.SystemStatusResult}
 */
proto.YtResult.prototype.getSystemstatusresult = function() {
  return /** @type{?proto.SystemStatusResult} */ (
    jspb.Message.getWrapperField(this, SystemStatusResult_pb.SystemStatusResult, 4));
};


/** @param {?proto.SystemStatusResult|undefined} value */
proto.YtResult.prototype.setSystemstatusresult = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.YtResult.oneofGroups_[0], value);
};


proto.YtResult.prototype.clearSystemstatusresult = function() {
  this.setSystemstatusresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtResult.prototype.hasSystemstatusresult = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string msgOutput = 5;
 * @return {string}
 */
proto.YtResult.prototype.getMsgoutput = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.YtResult.prototype.setMsgoutput = function(value) {
  jspb.Message.setOneofField(this, 5, proto.YtResult.oneofGroups_[0], value);
};


proto.YtResult.prototype.clearMsgoutput = function() {
  jspb.Message.setOneofField(this, 5, proto.YtResult.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtResult.prototype.hasMsgoutput = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes dataV2 = 101;
 * @return {!(string|Uint8Array)}
 */
proto.YtResult.prototype.getDatav2 = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 101, ""));
};


/**
 * optional bytes dataV2 = 101;
 * This is a type-conversion wrapper around `getDatav2()`
 * @return {string}
 */
proto.YtResult.prototype.getDatav2_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDatav2()));
};


/**
 * optional bytes dataV2 = 101;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDatav2()`
 * @return {!Uint8Array}
 */
proto.YtResult.prototype.getDatav2_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDatav2()));
};


/** @param {!(string|Uint8Array)} value */
proto.YtResult.prototype.setDatav2 = function(value) {
  jspb.Message.setField(this, 101, value);
};


proto.YtResult.prototype.clearDatav2 = function() {
  jspb.Message.setField(this, 101, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtResult.prototype.hasDatav2 = function() {
  return jspb.Message.getField(this, 101) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.YtRpc = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.YtRpc.oneofGroups_);
};
goog.inherits(proto.YtRpc, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.YtRpc.displayName = 'proto.YtRpc';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.YtRpc.oneofGroups_ = [[3,4,10,11,21,53,54,55,56,57]];

/**
 * @enum {number}
 */
proto.YtRpc.ParamsCase = {
  PARAMS_NOT_SET: 0,
  STRPARAMS: 3,
  INTPARAMS: 4,
  CAMERAEXPOSUREPARAMS: 10,
  FLASHERPARAMS: 11,
  FILEPART: 21,
  REGISTERFACEIDWITHPICPARAMS: 53,
  REGISTERFACEIDFROMCAMERAPARAMS: 54,
  SETFACEIDPARAMS: 55,
  LISTFACEIDPARAMS: 56,
  REGISTERFACEIDWITHTRACEIDPARAMS: 57
};

/**
 * @return {proto.YtRpc.ParamsCase}
 */
proto.YtRpc.prototype.getParamsCase = function() {
  return /** @type {proto.YtRpc.ParamsCase} */(jspb.Message.computeOneofCase(this, proto.YtRpc.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.YtRpc.prototype.toObject = function(opt_includeInstance) {
  return proto.YtRpc.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.YtRpc} msg The msg instance to transform.
 * @return {!Object}
 */
proto.YtRpc.toObject = function(includeInstance, msg) {
  var f, obj = {
    func: jspb.Message.getField(msg, 1),
    sequenceid: jspb.Message.getField(msg, 2),
    auth: jspb.Message.getField(msg, 100),
    strparams: jspb.Message.getField(msg, 3),
    intparams: jspb.Message.getField(msg, 4),
    cameraexposureparams: (f = msg.getCameraexposureparams()) && CameraExposureParams_pb.CameraExposureParams.toObject(includeInstance, f),
    flasherparams: (f = msg.getFlasherparams()) && FlasherParams_pb.FlasherParams.toObject(includeInstance, f),
    filepart: (f = msg.getFilepart()) && FilePart_pb.FilePart.toObject(includeInstance, f),
    registerfaceidwithpicparams: (f = msg.getRegisterfaceidwithpicparams()) && RegisterFaceIdWithPicParams_pb.RegisterFaceIdWithPicParams.toObject(includeInstance, f),
    registerfaceidfromcameraparams: (f = msg.getRegisterfaceidfromcameraparams()) && RegisterFaceIdWithPicParams_pb.RegisterFaceIdFromCameraParams.toObject(includeInstance, f),
    setfaceidparams: (f = msg.getSetfaceidparams()) && RegisterFaceIdWithPicParams_pb.SetFaceIdParams.toObject(includeInstance, f),
    listfaceidparams: (f = msg.getListfaceidparams()) && RegisterFaceIdWithPicParams_pb.ListFaceIdParams.toObject(includeInstance, f),
    registerfaceidwithtraceidparams: (f = msg.getRegisterfaceidwithtraceidparams()) && RegisterFaceIdWithPicParams_pb.RegisterFaceIdWithTraceIdParams.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.YtRpc}
 */
proto.YtRpc.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.YtRpc;
  return proto.YtRpc.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.YtRpc} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.YtRpc}
 */
proto.YtRpc.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.YtRpc.Function} */ (reader.readEnum());
      msg.setFunc(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceid(value);
      break;
    case 100:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuth(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStrparams(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIntparams(value);
      break;
    case 10:
      var value = new CameraExposureParams_pb.CameraExposureParams;
      reader.readMessage(value,CameraExposureParams_pb.CameraExposureParams.deserializeBinaryFromReader);
      msg.setCameraexposureparams(value);
      break;
    case 11:
      var value = new FlasherParams_pb.FlasherParams;
      reader.readMessage(value,FlasherParams_pb.FlasherParams.deserializeBinaryFromReader);
      msg.setFlasherparams(value);
      break;
    case 21:
      var value = new FilePart_pb.FilePart;
      reader.readMessage(value,FilePart_pb.FilePart.deserializeBinaryFromReader);
      msg.setFilepart(value);
      break;
    case 53:
      var value = new RegisterFaceIdWithPicParams_pb.RegisterFaceIdWithPicParams;
      reader.readMessage(value,RegisterFaceIdWithPicParams_pb.RegisterFaceIdWithPicParams.deserializeBinaryFromReader);
      msg.setRegisterfaceidwithpicparams(value);
      break;
    case 54:
      var value = new RegisterFaceIdWithPicParams_pb.RegisterFaceIdFromCameraParams;
      reader.readMessage(value,RegisterFaceIdWithPicParams_pb.RegisterFaceIdFromCameraParams.deserializeBinaryFromReader);
      msg.setRegisterfaceidfromcameraparams(value);
      break;
    case 55:
      var value = new RegisterFaceIdWithPicParams_pb.SetFaceIdParams;
      reader.readMessage(value,RegisterFaceIdWithPicParams_pb.SetFaceIdParams.deserializeBinaryFromReader);
      msg.setSetfaceidparams(value);
      break;
    case 56:
      var value = new RegisterFaceIdWithPicParams_pb.ListFaceIdParams;
      reader.readMessage(value,RegisterFaceIdWithPicParams_pb.ListFaceIdParams.deserializeBinaryFromReader);
      msg.setListfaceidparams(value);
      break;
    case 57:
      var value = new RegisterFaceIdWithPicParams_pb.RegisterFaceIdWithTraceIdParams;
      reader.readMessage(value,RegisterFaceIdWithPicParams_pb.RegisterFaceIdWithTraceIdParams.deserializeBinaryFromReader);
      msg.setRegisterfaceidwithtraceidparams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.YtRpc} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.YtRpc.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.YtRpc.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.YtRpc.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {!proto.YtRpc.Function} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 100));
  if (f != null) {
    writer.writeString(
      100,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = this.getCameraexposureparams();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      CameraExposureParams_pb.CameraExposureParams.serializeBinaryToWriter
    );
  }
  f = this.getFlasherparams();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      FlasherParams_pb.FlasherParams.serializeBinaryToWriter
    );
  }
  f = this.getFilepart();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      FilePart_pb.FilePart.serializeBinaryToWriter
    );
  }
  f = this.getRegisterfaceidwithpicparams();
  if (f != null) {
    writer.writeMessage(
      53,
      f,
      RegisterFaceIdWithPicParams_pb.RegisterFaceIdWithPicParams.serializeBinaryToWriter
    );
  }
  f = this.getRegisterfaceidfromcameraparams();
  if (f != null) {
    writer.writeMessage(
      54,
      f,
      RegisterFaceIdWithPicParams_pb.RegisterFaceIdFromCameraParams.serializeBinaryToWriter
    );
  }
  f = this.getSetfaceidparams();
  if (f != null) {
    writer.writeMessage(
      55,
      f,
      RegisterFaceIdWithPicParams_pb.SetFaceIdParams.serializeBinaryToWriter
    );
  }
  f = this.getListfaceidparams();
  if (f != null) {
    writer.writeMessage(
      56,
      f,
      RegisterFaceIdWithPicParams_pb.ListFaceIdParams.serializeBinaryToWriter
    );
  }
  f = this.getRegisterfaceidwithtraceidparams();
  if (f != null) {
    writer.writeMessage(
      57,
      f,
      RegisterFaceIdWithPicParams_pb.RegisterFaceIdWithTraceIdParams.serializeBinaryToWriter
    );
  }
};


/**
 * required Function func = 1;
 * @return {!proto.YtRpc.Function}
 */
proto.YtRpc.prototype.getFunc = function() {
  return /** @type {!proto.YtRpc.Function} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.YtRpc.Function} value */
proto.YtRpc.prototype.setFunc = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.YtRpc.prototype.clearFunc = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtRpc.prototype.hasFunc = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 sequenceId = 2;
 * @return {number}
 */
proto.YtRpc.prototype.getSequenceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.YtRpc.prototype.setSequenceid = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.YtRpc.prototype.clearSequenceid = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtRpc.prototype.hasSequenceid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string auth = 100;
 * @return {string}
 */
proto.YtRpc.prototype.getAuth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 100, ""));
};


/** @param {string} value */
proto.YtRpc.prototype.setAuth = function(value) {
  jspb.Message.setField(this, 100, value);
};


proto.YtRpc.prototype.clearAuth = function() {
  jspb.Message.setField(this, 100, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtRpc.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional string strParams = 3;
 * @return {string}
 */
proto.YtRpc.prototype.getStrparams = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.YtRpc.prototype.setStrparams = function(value) {
  jspb.Message.setOneofField(this, 3, proto.YtRpc.oneofGroups_[0], value);
};


proto.YtRpc.prototype.clearStrparams = function() {
  jspb.Message.setOneofField(this, 3, proto.YtRpc.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtRpc.prototype.hasStrparams = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 intParams = 4;
 * @return {number}
 */
proto.YtRpc.prototype.getIntparams = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.YtRpc.prototype.setIntparams = function(value) {
  jspb.Message.setOneofField(this, 4, proto.YtRpc.oneofGroups_[0], value);
};


proto.YtRpc.prototype.clearIntparams = function() {
  jspb.Message.setOneofField(this, 4, proto.YtRpc.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtRpc.prototype.hasIntparams = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CameraExposureParams cameraExposureParams = 10;
 * @return {?proto.CameraExposureParams}
 */
proto.YtRpc.prototype.getCameraexposureparams = function() {
  return /** @type{?proto.CameraExposureParams} */ (
    jspb.Message.getWrapperField(this, CameraExposureParams_pb.CameraExposureParams, 10));
};


/** @param {?proto.CameraExposureParams|undefined} value */
proto.YtRpc.prototype.setCameraexposureparams = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.YtRpc.oneofGroups_[0], value);
};


proto.YtRpc.prototype.clearCameraexposureparams = function() {
  this.setCameraexposureparams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtRpc.prototype.hasCameraexposureparams = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional FlasherParams flasherParams = 11;
 * @return {?proto.FlasherParams}
 */
proto.YtRpc.prototype.getFlasherparams = function() {
  return /** @type{?proto.FlasherParams} */ (
    jspb.Message.getWrapperField(this, FlasherParams_pb.FlasherParams, 11));
};


/** @param {?proto.FlasherParams|undefined} value */
proto.YtRpc.prototype.setFlasherparams = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.YtRpc.oneofGroups_[0], value);
};


proto.YtRpc.prototype.clearFlasherparams = function() {
  this.setFlasherparams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtRpc.prototype.hasFlasherparams = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional FilePart filePart = 21;
 * @return {?proto.FilePart}
 */
proto.YtRpc.prototype.getFilepart = function() {
  return /** @type{?proto.FilePart} */ (
    jspb.Message.getWrapperField(this, FilePart_pb.FilePart, 21));
};


/** @param {?proto.FilePart|undefined} value */
proto.YtRpc.prototype.setFilepart = function(value) {
  jspb.Message.setOneofWrapperField(this, 21, proto.YtRpc.oneofGroups_[0], value);
};


proto.YtRpc.prototype.clearFilepart = function() {
  this.setFilepart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtRpc.prototype.hasFilepart = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional RegisterFaceIdWithPicParams registerFaceIdWithPicParams = 53;
 * @return {?proto.RegisterFaceIdWithPicParams}
 */
proto.YtRpc.prototype.getRegisterfaceidwithpicparams = function() {
  return /** @type{?proto.RegisterFaceIdWithPicParams} */ (
    jspb.Message.getWrapperField(this, RegisterFaceIdWithPicParams_pb.RegisterFaceIdWithPicParams, 53));
};


/** @param {?proto.RegisterFaceIdWithPicParams|undefined} value */
proto.YtRpc.prototype.setRegisterfaceidwithpicparams = function(value) {
  jspb.Message.setOneofWrapperField(this, 53, proto.YtRpc.oneofGroups_[0], value);
};


proto.YtRpc.prototype.clearRegisterfaceidwithpicparams = function() {
  this.setRegisterfaceidwithpicparams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtRpc.prototype.hasRegisterfaceidwithpicparams = function() {
  return jspb.Message.getField(this, 53) != null;
};


/**
 * optional RegisterFaceIdFromCameraParams registerFaceIdFromCameraParams = 54;
 * @return {?proto.RegisterFaceIdFromCameraParams}
 */
proto.YtRpc.prototype.getRegisterfaceidfromcameraparams = function() {
  return /** @type{?proto.RegisterFaceIdFromCameraParams} */ (
    jspb.Message.getWrapperField(this, RegisterFaceIdWithPicParams_pb.RegisterFaceIdFromCameraParams, 54));
};


/** @param {?proto.RegisterFaceIdFromCameraParams|undefined} value */
proto.YtRpc.prototype.setRegisterfaceidfromcameraparams = function(value) {
  jspb.Message.setOneofWrapperField(this, 54, proto.YtRpc.oneofGroups_[0], value);
};


proto.YtRpc.prototype.clearRegisterfaceidfromcameraparams = function() {
  this.setRegisterfaceidfromcameraparams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtRpc.prototype.hasRegisterfaceidfromcameraparams = function() {
  return jspb.Message.getField(this, 54) != null;
};


/**
 * optional SetFaceIdParams setFaceIdParams = 55;
 * @return {?proto.SetFaceIdParams}
 */
proto.YtRpc.prototype.getSetfaceidparams = function() {
  return /** @type{?proto.SetFaceIdParams} */ (
    jspb.Message.getWrapperField(this, RegisterFaceIdWithPicParams_pb.SetFaceIdParams, 55));
};


/** @param {?proto.SetFaceIdParams|undefined} value */
proto.YtRpc.prototype.setSetfaceidparams = function(value) {
  jspb.Message.setOneofWrapperField(this, 55, proto.YtRpc.oneofGroups_[0], value);
};


proto.YtRpc.prototype.clearSetfaceidparams = function() {
  this.setSetfaceidparams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtRpc.prototype.hasSetfaceidparams = function() {
  return jspb.Message.getField(this, 55) != null;
};


/**
 * optional ListFaceIdParams listFaceIdParams = 56;
 * @return {?proto.ListFaceIdParams}
 */
proto.YtRpc.prototype.getListfaceidparams = function() {
  return /** @type{?proto.ListFaceIdParams} */ (
    jspb.Message.getWrapperField(this, RegisterFaceIdWithPicParams_pb.ListFaceIdParams, 56));
};


/** @param {?proto.ListFaceIdParams|undefined} value */
proto.YtRpc.prototype.setListfaceidparams = function(value) {
  jspb.Message.setOneofWrapperField(this, 56, proto.YtRpc.oneofGroups_[0], value);
};


proto.YtRpc.prototype.clearListfaceidparams = function() {
  this.setListfaceidparams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtRpc.prototype.hasListfaceidparams = function() {
  return jspb.Message.getField(this, 56) != null;
};


/**
 * optional RegisterFaceIdWithTraceIdParams registerFaceIdWithTraceIdParams = 57;
 * @return {?proto.RegisterFaceIdWithTraceIdParams}
 */
proto.YtRpc.prototype.getRegisterfaceidwithtraceidparams = function() {
  return /** @type{?proto.RegisterFaceIdWithTraceIdParams} */ (
    jspb.Message.getWrapperField(this, RegisterFaceIdWithPicParams_pb.RegisterFaceIdWithTraceIdParams, 57));
};


/** @param {?proto.RegisterFaceIdWithTraceIdParams|undefined} value */
proto.YtRpc.prototype.setRegisterfaceidwithtraceidparams = function(value) {
  jspb.Message.setOneofWrapperField(this, 57, proto.YtRpc.oneofGroups_[0], value);
};


proto.YtRpc.prototype.clearRegisterfaceidwithtraceidparams = function() {
  this.setRegisterfaceidwithtraceidparams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtRpc.prototype.hasRegisterfaceidwithtraceidparams = function() {
  return jspb.Message.getField(this, 57) != null;
};


/**
 * @enum {number}
 */
proto.YtRpc.Function = {
  SETMODEL: 0,
  GETDEVICEINFO: 1,
  UPGRADEFIRMWARE: 2,
  SETEXPOSURE: 10,
  SETFLASHER: 11,
  SETMAINCAMERA: 12,
  SETCAMERAROTATION: 13,
  LISTFILE: 20,
  UPLOADFILE: 21,
  DELETEFILE: 22,
  FORMATPARTITION: 23,
  GETCONFIG: 24,
  SETCONFIG: 25,
  RESETCONFIG: 26,
  DOWNLOADFILE: 27,
  TAKERAWPICTURE: 40,
  SETDEBUGDRAWING: 41,
  GETFACELIBINFO: 51,
  CLEARFACELIB: 52,
  REGISTERFACEIDWITHPIC: 53,
  REGISTERFACEIDFROMCAMERA: 54,
  DELETEFACEID: 55,
  SETFACEID: 56,
  GETFACEPIC: 57,
  LISTFACEID: 58,
  DELETEFACENAME: 59,
  GETTRACEPIC: 60,
  REGISTERFACEIDWITHTRACEID: 61
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.YtRpcResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.YtRpcResponse.oneofGroups_);
};
goog.inherits(proto.YtRpcResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.YtRpcResponse.displayName = 'proto.YtRpcResponse';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.YtRpcResponse.oneofGroups_ = [[3,4,20,40,50]];

/**
 * @enum {number}
 */
proto.YtRpcResponse.DataCase = {
  DATA_NOT_SET: 0,
  STRDATA: 3,
  INTDATA: 4,
  FILELISTRESULT: 20,
  FILEPART: 40,
  FACEIDLISTDATA: 50
};

/**
 * @return {proto.YtRpcResponse.DataCase}
 */
proto.YtRpcResponse.prototype.getDataCase = function() {
  return /** @type {proto.YtRpcResponse.DataCase} */(jspb.Message.computeOneofCase(this, proto.YtRpcResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.YtRpcResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.YtRpcResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.YtRpcResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.YtRpcResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceid: jspb.Message.getField(msg, 1),
    code: jspb.Message.getField(msg, 2),
    strdata: jspb.Message.getField(msg, 3),
    intdata: jspb.Message.getField(msg, 4),
    filelistresult: (f = msg.getFilelistresult()) && FileListResult_pb.FileListResult.toObject(includeInstance, f),
    filepart: (f = msg.getFilepart()) && FilePart_pb.FilePart.toObject(includeInstance, f),
    faceidlistdata: (f = msg.getFaceidlistdata()) && RegisterFaceIdWithPicParams_pb.FaceIdListData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.YtRpcResponse}
 */
proto.YtRpcResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.YtRpcResponse;
  return proto.YtRpcResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.YtRpcResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.YtRpcResponse}
 */
proto.YtRpcResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceid(value);
      break;
    case 2:
      var value = /** @type {!proto.YtRpcResponse.ReturnCode} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStrdata(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIntdata(value);
      break;
    case 20:
      var value = new FileListResult_pb.FileListResult;
      reader.readMessage(value,FileListResult_pb.FileListResult.deserializeBinaryFromReader);
      msg.setFilelistresult(value);
      break;
    case 40:
      var value = new FilePart_pb.FilePart;
      reader.readMessage(value,FilePart_pb.FilePart.deserializeBinaryFromReader);
      msg.setFilepart(value);
      break;
    case 50:
      var value = new RegisterFaceIdWithPicParams_pb.FaceIdListData;
      reader.readMessage(value,RegisterFaceIdWithPicParams_pb.FaceIdListData.deserializeBinaryFromReader);
      msg.setFaceidlistdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.YtRpcResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.YtRpcResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.YtRpcResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.YtRpcResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {!proto.YtRpcResponse.ReturnCode} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = this.getFilelistresult();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      FileListResult_pb.FileListResult.serializeBinaryToWriter
    );
  }
  f = this.getFilepart();
  if (f != null) {
    writer.writeMessage(
      40,
      f,
      FilePart_pb.FilePart.serializeBinaryToWriter
    );
  }
  f = this.getFaceidlistdata();
  if (f != null) {
    writer.writeMessage(
      50,
      f,
      RegisterFaceIdWithPicParams_pb.FaceIdListData.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 sequenceId = 1;
 * @return {number}
 */
proto.YtRpcResponse.prototype.getSequenceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.YtRpcResponse.prototype.setSequenceid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.YtRpcResponse.prototype.clearSequenceid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtRpcResponse.prototype.hasSequenceid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required ReturnCode code = 2;
 * @return {!proto.YtRpcResponse.ReturnCode}
 */
proto.YtRpcResponse.prototype.getCode = function() {
  return /** @type {!proto.YtRpcResponse.ReturnCode} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.YtRpcResponse.ReturnCode} value */
proto.YtRpcResponse.prototype.setCode = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.YtRpcResponse.prototype.clearCode = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtRpcResponse.prototype.hasCode = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string strData = 3;
 * @return {string}
 */
proto.YtRpcResponse.prototype.getStrdata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.YtRpcResponse.prototype.setStrdata = function(value) {
  jspb.Message.setOneofField(this, 3, proto.YtRpcResponse.oneofGroups_[0], value);
};


proto.YtRpcResponse.prototype.clearStrdata = function() {
  jspb.Message.setOneofField(this, 3, proto.YtRpcResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtRpcResponse.prototype.hasStrdata = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 intData = 4;
 * @return {number}
 */
proto.YtRpcResponse.prototype.getIntdata = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.YtRpcResponse.prototype.setIntdata = function(value) {
  jspb.Message.setOneofField(this, 4, proto.YtRpcResponse.oneofGroups_[0], value);
};


proto.YtRpcResponse.prototype.clearIntdata = function() {
  jspb.Message.setOneofField(this, 4, proto.YtRpcResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtRpcResponse.prototype.hasIntdata = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional FileListResult fileListResult = 20;
 * @return {?proto.FileListResult}
 */
proto.YtRpcResponse.prototype.getFilelistresult = function() {
  return /** @type{?proto.FileListResult} */ (
    jspb.Message.getWrapperField(this, FileListResult_pb.FileListResult, 20));
};


/** @param {?proto.FileListResult|undefined} value */
proto.YtRpcResponse.prototype.setFilelistresult = function(value) {
  jspb.Message.setOneofWrapperField(this, 20, proto.YtRpcResponse.oneofGroups_[0], value);
};


proto.YtRpcResponse.prototype.clearFilelistresult = function() {
  this.setFilelistresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtRpcResponse.prototype.hasFilelistresult = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional FilePart filePart = 40;
 * @return {?proto.FilePart}
 */
proto.YtRpcResponse.prototype.getFilepart = function() {
  return /** @type{?proto.FilePart} */ (
    jspb.Message.getWrapperField(this, FilePart_pb.FilePart, 40));
};


/** @param {?proto.FilePart|undefined} value */
proto.YtRpcResponse.prototype.setFilepart = function(value) {
  jspb.Message.setOneofWrapperField(this, 40, proto.YtRpcResponse.oneofGroups_[0], value);
};


proto.YtRpcResponse.prototype.clearFilepart = function() {
  this.setFilepart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtRpcResponse.prototype.hasFilepart = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional FaceIdListData faceIdListData = 50;
 * @return {?proto.FaceIdListData}
 */
proto.YtRpcResponse.prototype.getFaceidlistdata = function() {
  return /** @type{?proto.FaceIdListData} */ (
    jspb.Message.getWrapperField(this, RegisterFaceIdWithPicParams_pb.FaceIdListData, 50));
};


/** @param {?proto.FaceIdListData|undefined} value */
proto.YtRpcResponse.prototype.setFaceidlistdata = function(value) {
  jspb.Message.setOneofWrapperField(this, 50, proto.YtRpcResponse.oneofGroups_[0], value);
};


proto.YtRpcResponse.prototype.clearFaceidlistdata = function() {
  this.setFaceidlistdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtRpcResponse.prototype.hasFaceidlistdata = function() {
  return jspb.Message.getField(this, 50) != null;
};


/**
 * @enum {number}
 */
proto.YtRpcResponse.ReturnCode = {
  SUCC: 0,
  CONTINUE: 1,
  ERROR_OTHER: 2,
  ERROR_CRC: 3,
  ERROR_PARAMETERS: 4,
  ERROR_RPC_TIMEOUT: 5,
  ERROR_NOT_EXIST: 6,
  ERROR_INVALID_PATH: 20,
  ERROR_FILE_EXCEED_LIMITS: 21,
  ERROR_PERMISSION: 22,
  ERROR_REGISTER_FACEID_NO_FACE_DETECTED: 50,
  ERROR_REGISTER_FACEID_TOO_MANY_FACES: 51,
  ERROR_REGISTER_FACEID_FILE_NOT_READABLE: 52,
  ERROR_REGISTER_FACEID_LIB_FULL: 53,
  ERROR_REGISTER_FACEID_TIMEOUT: 54,
  ERROR_FACEID_NOT_EXIST: 55
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.YtMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.YtMsg.oneofGroups_);
};
goog.inherits(proto.YtMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.YtMsg.displayName = 'proto.YtMsg';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.YtMsg.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.YtMsg.ValuesCase = {
  VALUES_NOT_SET: 0,
  RPC: 1,
  RESPONSE: 2,
  RESULT: 3
};

/**
 * @return {proto.YtMsg.ValuesCase}
 */
proto.YtMsg.prototype.getValuesCase = function() {
  return /** @type {proto.YtMsg.ValuesCase} */(jspb.Message.computeOneofCase(this, proto.YtMsg.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.YtMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.YtMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.YtMsg} msg The msg instance to transform.
 * @return {!Object}
 */
proto.YtMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    rpc: (f = msg.getRpc()) && proto.YtRpc.toObject(includeInstance, f),
    response: (f = msg.getResponse()) && proto.YtRpcResponse.toObject(includeInstance, f),
    result: (f = msg.getResult()) && proto.YtResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.YtMsg}
 */
proto.YtMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.YtMsg;
  return proto.YtMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.YtMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.YtMsg}
 */
proto.YtMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.YtRpc;
      reader.readMessage(value,proto.YtRpc.deserializeBinaryFromReader);
      msg.setRpc(value);
      break;
    case 2:
      var value = new proto.YtRpcResponse;
      reader.readMessage(value,proto.YtRpcResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    case 3:
      var value = new proto.YtResult;
      reader.readMessage(value,proto.YtResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.YtMsg} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.YtMsg.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.YtMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.YtMsg.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRpc();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.YtRpc.serializeBinaryToWriter
    );
  }
  f = this.getResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.YtRpcResponse.serializeBinaryToWriter
    );
  }
  f = this.getResult();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.YtResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional YtRpc rpc = 1;
 * @return {?proto.YtRpc}
 */
proto.YtMsg.prototype.getRpc = function() {
  return /** @type{?proto.YtRpc} */ (
    jspb.Message.getWrapperField(this, proto.YtRpc, 1));
};


/** @param {?proto.YtRpc|undefined} value */
proto.YtMsg.prototype.setRpc = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.YtMsg.oneofGroups_[0], value);
};


proto.YtMsg.prototype.clearRpc = function() {
  this.setRpc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtMsg.prototype.hasRpc = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional YtRpcResponse response = 2;
 * @return {?proto.YtRpcResponse}
 */
proto.YtMsg.prototype.getResponse = function() {
  return /** @type{?proto.YtRpcResponse} */ (
    jspb.Message.getWrapperField(this, proto.YtRpcResponse, 2));
};


/** @param {?proto.YtRpcResponse|undefined} value */
proto.YtMsg.prototype.setResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.YtMsg.oneofGroups_[0], value);
};


proto.YtMsg.prototype.clearResponse = function() {
  this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtMsg.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional YtResult result = 3;
 * @return {?proto.YtResult}
 */
proto.YtMsg.prototype.getResult = function() {
  return /** @type{?proto.YtResult} */ (
    jspb.Message.getWrapperField(this, proto.YtResult, 3));
};


/** @param {?proto.YtResult|undefined} value */
proto.YtMsg.prototype.setResult = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.YtMsg.oneofGroups_[0], value);
};


proto.YtMsg.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.YtMsg.prototype.hasResult = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto);
